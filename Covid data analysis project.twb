<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='worldometer_coronavirus_summary_data' inline='true' name='federated.01bbhzw0531nyq1a139vn1dm8wf9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='worldometer_coronavirus_summary_data' name='textscan.0a2y6350d6cvtj13dgvnd16o4nhm'>
            <connection class='textscan' directory='C:/Users/User/Desktop/covid 19 data set' filename='worldometer_coronavirus_summary_data.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0a2y6350d6cvtj13dgvnd16o4nhm' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='integer' name='total_confirmed' ordinal='2' />
            <column datatype='real' name='total_deaths' ordinal='3' />
            <column datatype='real' name='total_recovered' ordinal='4' />
            <column datatype='real' name='active_cases' ordinal='5' />
            <column datatype='real' name='serious_or_critical' ordinal='6' />
            <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
            <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
            <column datatype='real' name='total_tests' ordinal='9' />
            <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
            <column datatype='integer' name='population' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.0a2y6350d6cvtj13dgvnd16o4nhm' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
            <column datatype='string' name='country' ordinal='0' />
            <column datatype='string' name='continent' ordinal='1' />
            <column datatype='integer' name='total_confirmed' ordinal='2' />
            <column datatype='real' name='total_deaths' ordinal='3' />
            <column datatype='real' name='total_recovered' ordinal='4' />
            <column datatype='real' name='active_cases' ordinal='5' />
            <column datatype='real' name='serious_or_critical' ordinal='6' />
            <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
            <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
            <column datatype='real' name='total_tests' ordinal='9' />
            <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
            <column datatype='integer' name='population' ordinal='11' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;â‚¹&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_IN&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>country</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RGB' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_confirmed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_confirmed]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_confirmed</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_recovered</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_recovered]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_recovered</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>active_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[active_cases]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>active_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>serious_or_critical</remote-name>
            <remote-type>5</remote-type>
            <local-name>[serious_or_critical]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>serious_or_critical</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases_per_1m_population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_cases_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_cases_per_1m_population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths_per_1m_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_deaths_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_deaths_per_1m_population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_tests_per_1m_population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_tests_per_1m_population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>total_tests_per_1m_population</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[worldometer_coronavirus_summary_data.csv]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='worldometer_coronavirus_summary_data.csv' datatype='table' name='[__tableau_internal_object_id__].[worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F]' role='measure' type='quantitative' />
      <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Population' datatype='integer' name='[population]' role='measure' type='quantitative' />
      <column caption='Serious Or Critical' datatype='real' name='[serious_or_critical]' role='measure' type='quantitative' />
      <column caption='Total Cases Per 1M Population' datatype='integer' name='[total_cases_per_1m_population]' role='measure' type='quantitative' />
      <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
      <column caption='Total Deaths Per 1M Population' datatype='real' name='[total_deaths_per_1m_population]' role='measure' type='quantitative' />
      <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
      <column caption='Total Tests' datatype='real' name='[total_tests]' role='measure' type='quantitative' />
      <column caption='Total Tests Per 1M Population' datatype='real' name='[total_tests_per_1m_population]' role='measure' type='quantitative' />
      <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
      <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:ok]' pivot='key' type='ordinal' />
      <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:ok]' pivot='key' type='ordinal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='shape' field='[sum:total_deaths:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>116207.0</bucket>
            </map>
            <map to='asterisk'>
              <bucket>213023.0</bucket>
            </map>
            <map to='circle'>
              <bucket>1068.0</bucket>
            </map>
            <map to='circle'>
              <bucket>147257.0</bucket>
            </map>
            <map to='diamond'>
              <bucket>137919.0</bucket>
            </map>
            <map to='diamond'>
              <bucket>324465.0</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>524214.0</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>664920.0</bucket>
            </map>
            <map to='plus'>
              <bucket>43065.0</bucket>
            </map>
            <map to='plus'>
              <bucket>165244.0</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1026646.0</bucket>
            </map>
            <map to='square'>
              <bucket>7794.0</bucket>
            </map>
            <map to='square'>
              <bucket>156458.0</bucket>
            </map>
            <map to='times'>
              <bucket>105444.0</bucket>
            </map>
            <map to='times'>
              <bucket>176708.0</bucket>
            </map>
            <map to='triangle'>
              <bucket>377670.0</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[sum:active_cases:ok]' type='shape'>
            <map to='asterisk'>
              <bucket>298772.0</bucket>
            </map>
            <map to='asterisk'>
              <bucket>706841.0</bucket>
            </map>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
            <map to='circle'>
              <bucket>376294.0</bucket>
            </map>
            <map to='diamond'>
              <bucket>305201.0</bucket>
            </map>
            <map to='diamond'>
              <bucket>856871.0</bucket>
            </map>
            <map to='down-triangle'>
              <bucket>1298525.0</bucket>
            </map>
            <map to='left-triangle'>
              <bucket>1685607.0</bucket>
            </map>
            <map to='plus'>
              <bucket>17692.0</bucket>
            </map>
            <map to='plus'>
              <bucket>473589.0</bucket>
            </map>
            <map to='right-triangle'>
              <bucket>1938567.0</bucket>
            </map>
            <map to='square'>
              <bucket>4784.0</bucket>
            </map>
            <map to='square'>
              <bucket>386179.0</bucket>
            </map>
            <map to='times'>
              <bucket>235444.0</bucket>
            </map>
            <map to='times'>
              <bucket>552117.0</bucket>
            </map>
            <map to='triangle'>
              <bucket>998118.0</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Brunei Darussalam&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cook Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Helena&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Channel Islands&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;China Macao Sar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Guadeloupe&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Timor Leste&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Saint Pierre And Miquelon&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Falkland Islands Malvinas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Kitts And Nevis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Vincent And The Grenadines&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guinea Bissau&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wallis And Futuna Islands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Caribbean Netherlands&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Democratic Republic Of The Congo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sao Tome And Principe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Swaziland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua And Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;French Guiana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;State Of Palestine&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;UK&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;USA&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Isle Of Man&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cote D Ivoire&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mayotte&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Niue&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Turks And Caicos Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bosnia And Herzegovina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Martinique&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Barthelemy&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trinidad And Tobago&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Czech Republic&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Viet Nam&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Saint Martin&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;China Hong Kong Sar&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reunion&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sint Maarten&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='worldometer_coronavirus_summary_data.csv' id='worldometer_coronavirus_summary_data.csv_0BD6B6806B46448A8D9243DC04A3831F'>
            <properties context=''>
              <relation connection='textscan.0a2y6350d6cvtj13dgvnd16o4nhm' name='worldometer_coronavirus_summary_data.csv' table='[worldometer_coronavirus_summary_data#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_IN' separator=','>
                  <column datatype='string' name='country' ordinal='0' />
                  <column datatype='string' name='continent' ordinal='1' />
                  <column datatype='integer' name='total_confirmed' ordinal='2' />
                  <column datatype='real' name='total_deaths' ordinal='3' />
                  <column datatype='real' name='total_recovered' ordinal='4' />
                  <column datatype='real' name='active_cases' ordinal='5' />
                  <column datatype='real' name='serious_or_critical' ordinal='6' />
                  <column datatype='integer' name='total_cases_per_1m_population' ordinal='7' />
                  <column datatype='real' name='total_deaths_per_1m_population' ordinal='8' />
                  <column datatype='real' name='total_tests' ordinal='9' />
                  <column datatype='real' name='total_tests_per_1m_population' ordinal='10' />
                  <column datatype='integer' name='population' ordinal='11' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Active vs Death'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Active v/s Death case</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.01bbhzw0531nyq1a139vn1dm8wf9' />
          </datasources>
          <datasource-dependencies datasource='federated.01bbhzw0531nyq1a139vn1dm8wf9'>
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:ok]' pivot='key' type='ordinal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([active_cases])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' />
              <shape column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:active_cases:ok]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]</rows>
        <cols>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</cols>
      </table>
      <simple-id uuid='{81048629-9C68-442A-9EB0-FD37F912D304}' />
    </worksheet>
    <worksheet name='Confirmed case'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Countries Confirmed Cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.01bbhzw0531nyq1a139vn1dm8wf9' />
          </datasources>
          <datasource-dependencies datasource='federated.01bbhzw0531nyq1a139vn1dm8wf9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;South Korea&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;UK&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]' field-type='quantitative' max='72660731' min='1387603' range-type='fixed' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</rows>
        <cols>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</cols>
      </table>
      <simple-id uuid='{32A8205F-84C4-4F89-82EF-E15216D48D29}' />
    </worksheet>
    <worksheet name='Death Case'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Death case Countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.01bbhzw0531nyq1a139vn1dm8wf9' />
          </datasources>
          <datasource-dependencies datasource='federated.01bbhzw0531nyq1a139vn1dm8wf9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_deaths])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' value='n#,##0,.0000K;-#,##0,.0000K' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' palette='red_blue_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' />
              <color column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' />
              <text column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' />
              <text column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
                <format attr='has-stroke' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F8F923DF-3DE3-481F-95D4-10FD7454D558}' />
    </worksheet>
    <worksheet name='Dual Axis Chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.01bbhzw0531nyq1a139vn1dm8wf9' />
          </datasources>
          <datasource-dependencies datasource='federated.01bbhzw0531nyq1a139vn1dm8wf9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_recovered]' derivation='Sum' name='[sum:total_recovered:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='real' name='[total_deaths]' role='measure' type='quantitative' />
            <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([total_recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' field-type='quantitative' max='1742091.8558904217' min='-547698.48508067045' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' palette='purple_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' palette='orange_gold_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' />
              <size column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' />
            </encodings>
            <reference-line axis-column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' boxplot-mark-exclusion='false' boxplot-whisker-type='standard' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-cell' symmetric='false' value-column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' z-order='1' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.25' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' />
              <size column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='6.7580051422119141' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' />
              <size column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' />
              <tooltip column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='6.7580051422119141' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk] + [federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk])</rows>
        <cols>([federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk] / [federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk])</cols>
      </table>
      <simple-id uuid='{21FDE328-547B-4B58-A7EA-EB7C24F84E60}' />
    </worksheet>
    <worksheet name='Global case'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Global cases</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.01bbhzw0531nyq1a139vn1dm8wf9' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.01bbhzw0531nyq1a139vn1dm8wf9'>
            <column caption='Active Cases' datatype='real' name='[active_cases]' role='measure' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[active_cases]' derivation='Sum' name='[sum:active_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_confirmed]' derivation='Sum' name='[sum:total_confirmed:qk]' pivot='key' type='quantitative' />
            <column caption='Total Confirmed' datatype='integer' name='[total_confirmed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[Longitude (generated)]' field-type='quantitative' max='22487956.591871746' min='-21534468.072774492' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[Latitude (generated)]' field-type='quantitative' max='14232392.702510467' min='-7180793.3041721918' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]' />
              <lod column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' />
              <lod column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:active_cases:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-color' value='#72b966' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[Latitude (generated)]</rows>
        <cols>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{E551D16F-AF53-4942-87E1-D859D327EFE3}' />
    </worksheet>
    <worksheet name='Highest Death rate/min'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Highest Death rate/Min</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.01bbhzw0531nyq1a139vn1dm8wf9' />
          </datasources>
          <datasource-dependencies datasource='federated.01bbhzw0531nyq1a139vn1dm8wf9'>
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths_per_1m_population]' derivation='Sum' name='[sum:total_deaths_per_1m_population:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths Per 1M Population' datatype='real' name='[total_deaths_per_1m_population]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bosnia And Herzegovina&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Bulgaria&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Croatia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Czech Republic&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Hungary&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Macedonia&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Montenegro&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Peru&quot;' />
              <groupfilter function='member' level='[none:country:nk]' member='&quot;Slovakia&quot;' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths_per_1m_population:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</rows>
        <cols>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths_per_1m_population:qk]</cols>
      </table>
      <simple-id uuid='{ED195A5B-DB00-4DC8-BD42-D2A678EC0FE3}' />
    </worksheet>
    <worksheet name='Recovery case'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 10 Recoveries case Country</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='worldometer_coronavirus_summary_data' name='federated.01bbhzw0531nyq1a139vn1dm8wf9' />
          </datasources>
          <datasource-dependencies datasource='federated.01bbhzw0531nyq1a139vn1dm8wf9'>
            <column-instance column='[total_recovered]' derivation='Avg' name='[avg:total_recovered:qk]' pivot='key' type='quantitative' />
            <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[country]' derivation='None' name='[none:country:nk]' pivot='key' type='nominal' />
            <column caption='Total Recovered' datatype='real' name='[total_recovered]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]'>
            <groupfilter count='20' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='AVG([total_recovered])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' />
              <size column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[avg:total_recovered:qk]' />
              <text column='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{05E59727-C43D-4966-9F15-BC5321AD3530}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0043F407-D85B-41DE-AE98-E04C06451F0F}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{4F9B8EBE-0787-49D0-8897-77DDF6624296}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97440' id='9' param='horz' type-v2='layout-flow' w='98766' x='617' y='1280'>
            <zone h='97440' id='7' type-v2='layout-basic' w='86420' x='617' y='1280'>
              <zone h='48719' id='3' name='Global case' w='21606' x='65431' y='1280'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48719' id='5' name='Confirmed case' w='43209' x='617' y='1280'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48721' id='6' name='Death Case' w='21604' x='617' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48721' id='11' name='Recovery case' w='21606' x='65431' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48721' id='13' name='Active vs Death' w='21605' x='22221' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48719' id='15' name='Highest Death rate/min' w='21605' x='43826' y='1280'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48721' id='16' name='Dual Axis Chart' w='21605' x='43826' y='49999'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97440' id='8' is-fixed='true' param='vert' type-v2='layout-flow' w='12346' x='87037' y='1280'>
              <zone h='10400' id='10' name='Death Case' pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' type-v2='color' w='12346' x='87037' y='1280'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35040' id='12' name='Recovery case' pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' type-v2='color' w='12346' x='87037' y='11680'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='35040' id='14' name='Active vs Death' pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:active_cases:ok]' type-v2='shape' w='12346' x='87037' y='46720'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='16960' id='17' name='Dual Axis Chart' pane-specification-id='1' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' type-v2='size' w='12346' x='87037' y='81760'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2300' minheight='2300' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='21' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97440' id='20' param='vert' type-v2='layout-flow' w='98766' x='617' y='1280'>
                <zone fixed-size='280' h='48719' id='5' is-fixed='true' name='Confirmed case' w='43209' x='617' y='1280'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48719' id='15' is-fixed='true' name='Highest Death rate/min' w='21605' x='43826' y='1280'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48719' id='3' is-fixed='true' name='Global case' w='21606' x='65431' y='1280'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48721' id='6' is-fixed='true' name='Death Case' w='21604' x='617' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='10400' id='10' name='Death Case' pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' type-v2='color' w='12346' x='87037' y='1280'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48721' id='13' is-fixed='true' name='Active vs Death' w='21605' x='22221' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='35040' id='14' name='Active vs Death' pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:active_cases:ok]' type-v2='shape' w='12346' x='87037' y='46720'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48721' id='16' is-fixed='true' name='Dual Axis Chart' w='21605' x='43826' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='16960' id='17' name='Dual Axis Chart' pane-specification-id='1' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' type-v2='size' w='12346' x='87037' y='81760'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48721' id='11' is-fixed='true' name='Recovery case' w='21606' x='65431' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='35040' id='12' name='Recovery case' pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' type-v2='color' w='12346' x='87037' y='11680'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3C6E0E8C-ABF2-4E33-BD63-18FE3D105878}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Confirmed case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <tuple-selection>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Turkey&quot;</value>
                <value>15053168</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Italy&quot;</value>
                <value>17057873</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;South Korea&quot;</value>
                <value>17782061</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Russia&quot;</value>
                <value>18260293</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;UK&quot;</value>
                <value>22159805</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Germany&quot;</value>
                <value>25780226</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;France&quot;</value>
                <value>29160802</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;Brazil&quot;</value>
                <value>30682094</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;India&quot;</value>
                <value>43121599</value>
              </tuple>
            </tuple-reference>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
                  <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_confirmed:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>&quot;USA&quot;</value>
                <value>84209473</value>
              </tuple>
            </tuple-reference>
          </tuple-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:continent:nk]</field>
            <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{92221570-E816-4155-8AF1-3FBBC718D051}' />
    </window>
    <window class='worksheet' name='Global case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ED581D49-9965-448A-B574-482F3A7F5278}' />
    </window>
    <window class='worksheet' name='Death Case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{898033D8-6FC1-448A-A02D-295BB49CCA79}' />
    </window>
    <window class='worksheet' name='Recovery case'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D68AB2FB-BE0A-401F-A741-2A412E37B6DB}' />
    </window>
    <window class='worksheet' name='Active vs Death'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:active_cases:ok]' type='shape' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6488DFCB-375E-446F-8079-8D88CFA38CCC}' />
    </window>
    <window class='worksheet' name='Highest Death rate/min'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{DD2883E3-BA34-4B14-96F8-4DD2DFA2C225}' />
    </window>
    <window class='worksheet' name='Dual Axis Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]' type='color' />
            <card pane-specification-id='1' param='[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_recovered:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
            <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:total_deaths:qk]</field>
            <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[sum:total_deaths:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0B28A06D-DC11-43E3-83AA-BEC22BB30A5A}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Active vs Death'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Confirmed case'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Death Case' />
        <viewpoint name='Dual Axis Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Global case'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Highest Death rate/min' />
        <viewpoint name='Recovery case'>
          <highlight>
            <color-one-way>
              <field>[federated.01bbhzw0531nyq1a139vn1dm8wf9].[none:country:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='13' />
      <device-preview visible='true' />
      <simple-id uuid='{D75990B3-E17D-49DC-837A-093B096D1962}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8B982843-DB4C-4613-BF19-C2FDD9BA28B6}' />
    </window>
    <window class='worksheet' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{B9B37885-BC67-47E9-8E16-07CB8641F2E6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Active vs Death' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO2dWZAc2XWev8ysvar3pbobvXcDjR0YYAbgDCla21AempT4IFuLFZJDr360
      HQ6HI/zicPjFEQ6/WKGQpbC1OWhJpChapiiRoiiSoxlMA2gAvaEX9L5vtW+5+SGnmo1Z0FWY
      SnTn4HwRHVEFVJ176mb+ee/Ne85JxbZtG0EQPIl60g4IgvD8iIAFwcOcKgHbtk0lM3rLslxr
      3zRNV2wDrtl202/TNCs6Ji+LbTf72rbtqs/tUyXgSkkkEq7ZduviAO4J2E3blmW5JjK3bbuF
      CPgToqqedFsQao4nlSACFgQHUYIgeBhPCtgwjJN2QRBOBZ4UsCAIDp4UsM/nO2kXBOFU4EkB
      K4py0i4Iwgvl42IkPClgWQMLLxtmvsje98co7iSeErIn56KSfyG8bNiGycGdadJTy4R722m6
      fZFAS703R2BZAwsvI4HmOrr/+Zv4omEWf+sb7P7dmDcFLAgvI1bJIDk2S/LBHA03ztFwfdib
      U2hBeBkxsgWMdJ6+3/wiWiyMoijeFLCu6yftgiC8ULRIiIF/+RW0cPCpXZiaTKGLuRRjYw/R
      Lcindhm9c4flrX2MQpq7791hbnkTyyjw8N4ok7NL6IUcOwcJ8skt1vcyVbcnsdDCy4bq0/BF
      Qh/aQq3JCJzN5inls5g2zM8vcfH6K0w8fEh+U2H46g0WJsZYyu/R2n+e/OYMO4komXyKxZ19
      rr9689BOpbmWqqq6Ngq7mfJnWZZrfrtlu5xX68bee7mv3ehzLx7H8l5vNbssNRFwc1ucyMoy
      AIbqIxzw4/f7yAP1QR/BUIi8YdIaCaHGYhRLJeYn79Mx8Bp+VXkq+VpV1WNPFtu20TStFq5/
      yK5btsE58G757aZtTdNcEbBt2xUd7+fBsixXbbvR1+X86Gps10TAhVyWfL5ANpcnqpqsbGxS
      0C166nzMrW2TTGcZ7GxhaXUd42CfnsFWzl6+RWl/g510nLa6IPDj/d3jOr18cGpNWQhuTdEV
      RXHNb7dsK4riSduqqroiYDf7Gqo/t2si4OT+DnUtbST29hm4cJnVpRUuX75MNKixuviE85eu
      0xgLYK0soQ1fpqkuSDgaIdzTSSqdB4JVtSehlILgoJymsrKVjsCpVIr6+npX2jcMA7/fX3Pb
      AKVSiUAgUHO7tm2j67ortnVdR9M0V0Yct237fD5XRmC3+tqyLCzLqipQyZO3c2UEFgQHTwpY
      khkEwcGTAj5Fs35BOFE8KWBJZhAEB08KWBAEB08K2M2i3YLgJTwpYDfD5ATBS3hSwLIGFgQH
      TwpYspEEwcGTSpA1sCA4eFLAsgYWBAdPClhCKQXBwZMCditfVxC8Rs1v564vTLO8eUCs9QzD
      bUFGJ+aJNLZyZaCd0bFJtFA9V0f62EnniVppMv44vW2xqtqQEVgQHGqeTnjv/l1euf4K79x5
      j1jAz8j1G8w8GsOvabT1jZDbfIwdjpNK75BJm9x67SrW+xU5ygn1xwk0kUjQ2NhYS7cBdytb
      gLN291pFDtM0Xats4UXbblc/KVcpqZSaj8BnWhq4M3qPnUSWcEcLfsUpyGXa4NNUNH+Akmmy
      sbJIY8d5FJwRtVzpIBAIHNvpPp/PtbxayQd+GskHfppPfT6w5vMT0KC3t5++5gg/eneUg7RO
      T7yZB/fvMr96QFN9iP6Ra7QHszzZOEBVVXw+X8VXNbcEJgheo+YjcHO8m7qWTvwBPwpwO66j
      +nxoqsLrDW2gOq9j9Q0oypnn2tOVdEJBcKi5gFVNI3hkJPUfmWr4/D9+XZ7aPM9aQgQsCA6e
      3EaSQA5BcPCkgCUWWhAcPKkECeQQBAdPCliSGQTBwZMClqqUguDgSQFLQr8gOHhSwBILLQgO
      nhSwIAgOnhSwrIEFwcGTApYptCA4eFLAsg8sCA6eFLAgCA41F7BeyPDg/j12kjls2+Tx+Bg7
      yRxgszgzwep2AlMvkc7msEpZ9hLZqtuQWGhBcKj5hurEg0cMXbvBg3v3yDWEiHWPsDD9AKO9
      CT0SJ7M6TVA9SzKbJbO1zvD1W1W3IZFYguBQcwG3Nke4N/oe/nATB6bBtcYIqbo6DrIleoYb
      yVrN5LJFZh7doWv4NrGAinmkpE6lqYKlUqnWrh+WS3ErXdE0TVf8dtO2aZoVlTk6jba9dhyP
      lpWqlJoLeGMvy+3bn2HsznuEAyH2siVyuRxtDTH2U1mKiRT1Hc2cvXST1NYaWf0MUb92+APg
      +LvMgUBASuocodxvUlLnadtuldQBd/r6eUrq1FzA588NMfFgjHj/ML3tMSYePaSte5iethjT
      k5P4Gs7Q2hAjEAzQ39nK7kGCaHtzVW3IGlgQHGpelfKTUOkIvL+/T3NzdaKvtH2vjsBS1O7D
      tqWo3SlF9oEFwcGTApZILEFwEAELgofxpICLxeJJuyAIpwJPCljWwILg4EkBS0UOQXDwpIBP
      0c6XIJwonhSwBHIIgoMnBSwIgoMnBSxPZhAEB08qQQQsCA6eVIKsgQXBQQQsCB6m5huqy3MT
      bO5nKRLg9atDPHg0RUO8l8GuRsYfjuOra+NsTxuJfImYWuTAiNLVEqvOadkHFgTApXRCo5hm
      fGadsJWl4/xVFibGaIiGCbb1kd+cIdzcSyafIrmzz/VXb+JXndjmcjrVcWQyGWKx6kRfKaZp
      uhbpZRiGaxcft2ybpomqqq5VzXDTtteOY7kaRzV+u3I2rS8u0NU/wvqTaeqDPoKhEHnDpDUS
      Qo3FKJZKzE/ep2PgNfyq8lT5k0oOpm3briY0uGVbURTP2S7b9ZrfZdtu2T0ttmsuYKuUZbfg
      45W6IHpIZW5tm2Q6y2BnC0ur6xgH+/QMtnL28i1K+xvspOO01QWByhP6q71KVYpt26iq6tqV
      261RoXxBc8O2ZVmoqurKnf8XYduNhH43+xqqi/WvvYDRGDk3jAJ0nbvE6uITzl+6TmMsgLWy
      hDZ8maa6IOFohHBPJ6l0HghW1YasgQXBoeZK8AVCh0YVRaVnYPjw/zp6+g9fR3xO2ZqGhrqq
      25B9YEFw8KQSJJlBEBw8KWB5OqEgOHhSwIIgOHhSwHITSxAcPClgKWonCA6eFLCu6yftgiCc
      CjwpYEEQHDwpYFkDC4KDJwUsCIKDJwUshd0FwcGTAnbr6YGC4DU8KeBqnmAuCJ9mai5g27ZI
      JQ5I5wrYtk3yYJ9CyQBsMskE2XwJ2zLRDQPbMiiWqg+LlGQGQXCo+e3c7aVZNrMKzc1NFLYW
      Wc5CMfuEi31tzGyksItZRkZG2E1lsFNb1PdeJh542o3jkhVUVXUlocG27cM/t3DLb7dsf7AN
      N2y6eSzd4rScfxUJeHbyEbFYgL/49rv84q/+Ci3Rj1+Dzi8u4481srlt4qfEjWvXmJ4cZ30v
      xfnzF8jtzJNM55mbvEe87xpnG0KHFTkqdd6yLNeCOdwsmOdF2+UyR25Ev1mW5Vpiihf72jUB
      L88/IVnI89q1Ebb3UrREWz72s5FoHSOvvMr82BglxaZogWHoBDUfJdNELxbRok0MnL3A3vYu
      Jv2HFQgqrciRTqcJBAKV/saKKVdbcOsmWalUcs1vwBXbuq6jaZoryxa3bft8PlcqcoA7fV2+
      WFYT51DRJ1959SpPdg16WkNEWhqf+dlzwwPcf/cdYs1xLvc0MPoPb1PX2slQfxuj9+7hizZx
      pTvCnl+lt7WepbU9Bs98/AXho5BYaEFwqKgq5Tt//TXuzW2hKEG+/Mu/RHdT1BVnqhmB6+qq
      r+RRSfuGYXhyBNZ1XUbgD9h2awR2q69dGIFtkvu7pHQ///hLXyaoabTEQp/QzU+OVOQQBIdj
      L31rTx6TKxk8un+Xu3fHSBdOPhNI9oEFweGYEVjhws03yJdGuXz7JnsLj8nmSrTVnewoLAIW
      BIdjJ9u7S9N88y//grtTjwhHmvgnv3D2Rfj1TNyq2ywIXuPYKXRb/0V+/Vd+nqCqYhTyFEon
      P4WWSCxBcKjodtfC4g5n4mfo6mnBNE7+BpJMoQXBoaKhrG+4n472EP8wOoU/cPLTVykrKwgO
      FQk43tbIVsrPz3/pZ6gLnnwqn1TkEASHigQ8euc++WSCxPYay1tJt306FonEEgSHigTcFW9k
      dm6Cv/rBQ9qrfBi3G0gghyA4HDsXLaa2GZ9Zpr65iaHLt2iK1D6ErFrczDQRBC9xbCjlD77/
      Az7z5pfpbAzz9nf/ipW9Afpa3YmFrhTZRhIEh2NH4PRBgrtv/x0KkNzaov5cHp4hYMsy0XUD
      RdXw+zQMXUf1+dBUBUPXQXVeO6l7YNmgVSlIEbAgOBwr4M+9+QUO0nnnzchFuruenU64PnOf
      hZSPeHsbbVqOifUkCipXh+KMzayi2DZXL42wncriy27jax+hu+VkR3RB8CoVpRNWw8LEfTYy
      JRpbuihl97l27RpTk4/Ahu7BC2S35ykp9czN3Kep4zw3Lg8eplFBZUEayWSShoaGWroNODfH
      LMtyLVTTNE3P2TZNE1VVXbnz77Ztr/V1uRpHNTPMY9fA7/zNNxib33z/fYgv/dI/fWY+cP/F
      6/QD79y5QyzgR7fBMkz8moZhWph6CTWs0XGmh1QqiYWzLaRpGrZtV9Qxqqq6lrNrGIar+8xu
      lsR1w3b52LghMjdtg/f62rKsijVQ5tgz9cZP/Bz951e5e38Kw/YR9D3b+OqTadZ3kwRjrZw9
      U8edt98m0tjKyEA7o2OjaKF6rnaGQYvT01Jg8SMqchx3QP1+vysHvdKCAp8E8fvF2C7bdKuk
      jls+l8s6Vcqx6YSBUJiJsQkyqSLxzkbypWdPcXuGLtAz9OP3n/ts/PD162+88ePPRZ2KGvUV
      u3rEKwnkEASgwkCO1s5O+rrreDy3eiqCKCQWWhAcKlrstXd0Ez9zi4tXd7GDJx+HfBouIoJw
      GjhWjQfr8/zB//wqg5cukN7d4/O/8Es0RIMvwrePRZIZBMHh2Cl0rKWLN9/8SfyWzpXP/iyD
      7bWvBikIwvNxrID9wTCp3Q36L91k9/F7LGylX4RfgiBUQEVz0VDAx+rKMulskYD/5BP63Xqs
      iiB4jWMDOQ72E7z2019ke2uLwK1bNNVHXoxnz0BioQXB4VglvPO97zG3sEQmV2B/Z5u8fvJb
      OHITSxAcjlWCXsyytbmJ8v7HW7vOcNIpwVLUThAcjg+l/OxPcqavh9MU+yQJ/YLgcGwoZXdf
      z4vxpAoklFIQHDx5N0iezCAIDp4UsIzAguDgioCL2QQ7iQy2bbGyMEciUwRsNlcW2TnIYBk6
      uUIByyiQyhSqti/JDILgUPP9GNvSmXgwRqmui9JWkUIsztrEGIOdLeyWAhib46iD5zjIZCjs
      bdJ94cbT368gUaGc+Fxz39+viOBWsoRbtss23Uzy8Jrfbh7Hsn03bFbrd80FvLE0T1vfWXYS
      WXYKFtdG2jGS2+ymc/QN9ZMNFMhkC8yOj9Ix+CqNYR+maT7lfCVTZDdG4XJJHbdGeLds27aN
      aZqulaapNsm8Usr94SXbbvb18wxMNRawxf5+kkxhi9W9LMNdHaSKBsVCgYZomHSuQD6TIdzc
      zNCFayS2NyiY3YTevylVabUDv9/vSkkT27YxDMO1Uiy2bbvmN7hXQkbTNNei39y07fP5XKvI
      4VZJHcuyqgpUqrGAVS7fvI2l5+neS9PRGObBw3s0xHvp62pk/OE4vro2ehsj+IM++uPNbO0k
      6OlorqoVCeQQBIeaV6X8JFQ6Au/t7dHS0vLMzzxv+26OwKVSiUCg9mFstm2j67ortnVdd22U
      dNu2WyOwW339PCOwJ7eRJBZaEBw8KWDJRhIEB08qQdbAguDgSQFLMoMgOHhSwBJKKQgOnhSw
      JDMIgoMnBSwjsCA4eFLApVKp8g/bNpRKkEqCaTrvBeFTgic3VCsegW0bNtbh3l3w+0FR4HOf
      h8jJF+YThFrgSQFXHClVKsHDMfjJn4JoDBYXYOwevP5ZR8yC4HE8OYWuOPqzVAJFhXDEEWxT
      M2Sz7jonCC+QT7eAIxEIh2F2Bvb3YOIR9Pa565wgvEA8KeCKAzk0DW7dhkwa7t+D1jYYPivT
      Z+FTQ83XwMnddWYX1mjp6qe3PcbEowkauwbpaYsxPTmJrz7OQEcTqUKJmM/goBgk3hytqo2q
      YqFDYXj1VpW/QhC8Qc0FHIw0cv2VNt597y7mfpCukassTY1BOkYkPkBxc5bdsJ90LsPC9jaX
      brx2+N1yRYzjUBTFc1UzvGq7fDzciD9327ZbIbduVlYpp7RWSs0FrGkW9999GyXcTsYuMRQN
      sBOJkCka9NRHyRbqKeZLzI6P0jV0m5BPOSzbApVtEVmW5UowRzU+PA+Korjmt1u2wT2/3bZd
      tu+GzdNy/tVcwJlskVc+8znee/sdYs0R1hM50uk0Pe1NbO4mKO7uE+9t4dyVW2S3VkgUumgM
      VVdSx7IsV8Ipy1dAt0I1TdN0zW+3+sSyLFRVdSWF023bmqa5ktCvKIorfa0oStXHsfYjMDoP
      7t+n78JlOltizEw8YuD8NdoawizOTBLuPk9zQ4RQOEy0u4P9gxSEmqpqQxL6BcHBkyV1UqkU
      9fX1rrQvJXWeRkrqPI2U1BEEoWZ4UsDyZAZBcPCkgCWdUBAcPClgSegXBAdPClgQBAdPCliK
      2gmCgycFLGVlBcHBkwJ2a59WELyGJwUsd6EFwcGTApY1sCA4eFLAsgYWBAdPClj2gQXBwZMC
      ljWwIDjUPC9vd22B+dVtArEWLvU3MTr2mLrWTi72tzF67xG+aBNXznazlykQI8cBzfS2xapq
      QwQsCA41Tyc0DANNVbgzep+oT2X4+g1mx+8T1Hw0950jv/EYJdpBNp/kYDfD7duvYL+fRgWV
      rW8PDg5oaqouh7hS3Eq696rtcvUTNy6apmmiqqprtr3W1+WCEtWkV9Z8BLaNAvceTjI4cpn1
      xVmCKvh8fgzbJqBpGMEgRcNg4fE4bX3XUQDryDWkkj3eQCDgyl5wudqCmwUD3PLbLduGYbhS
      2QI4rGzh1ozKzXgBN2xbllV1RZian6lTY3fxN3aRy6Tpqg9yb3yaYrbAxb42pqensItZRkba
      Gb70Kmpml5XdND2tdUDlCf1uJGofRWx733bZphsJ/W7YLdssDyKVUnMBD1+6Tq6oo2gBmrva
      CSQOCEaHCQU0LoaTKIEIkaBGtK4On3aGYlGvuo1TVETkw9i21J0WXhg1F3CkroFI3Y/fNzQ1
      H76ONTQevva/P80PhYJVt3FaAzkMPcfazDfpvfCLKKpsdQnu48ltpFOJbbO18B3m7/02mcTC
      SXsjvCR4UsBuFEH7pFiWzsr01+i9+M9Ymf5TbMv9WYJtW6d7OSG4zulTQgWcNgHbts3G/Lep
      bzlP/5VfI5dcdn0Uto0ipXd+C3P5H1xtRzjdnC4lVMhpWwNbZoknD36X/c273P/OvyZ9MM/y
      5FdrOwofGWlto0Dxh/8Va3eW0ju/hbH4o9q1I3gKT1ZIP20CVlUfr73129gKKAC2jaIFnGcT
      f1KMAuxMgZ6F3s9hmwbFH/430AuEfu4/YSWWKXz3P+J7XYP+1z95e4Kn8KSAT9uTGRRVIxSL
      19aonneEuzMOKBB4P9xUUVBCDVjZHTB1KGWdC4U/Utv2BU9wupRQIZ/6WOhiGqa+BnoORn4e
      LB02xwDnYhF47Tcpvfd75L/1b8EsEvyJf4XVduGEnRZOAk8K+FN/5zUQg7NvwfooPPkORNuf
      +m9FCxB49TfRH/0JWvwSaudVLF2K3b+MeFLAlT6ZwbZtNvezhAM+GmJBbBuebBzQ39GITzvF
      9+8UxRHt8FuQ24XVd0B9OvZW8QXwX//VE3JQOC2c4rP446lmDby8leS/fPVtktki37n7hP/z
      vQl0o4qbYLb91B3gF4qiQLQNzn0Jht78iP9299m6wunHkyNwpfvAiqJw60IXRd3g3//O39LS
      EObf/PIbhINVZJLs70MqCQODz+ltDVAU0Gr/NDzB+3hyBK5mDWzbkCvoREJ+bBuKepVbUNkM
      7OxU6aEgvBhcELBNYm8H3XJC/VYW5khkioDN5soiOwcZLEMnVyhgGQVSmULVLVS+BoZ3Jle5
      O7PBf/iNz/OF1wb5nW/eI1dJBlTiAL77N/BgDJYXndeLEuMsnC5qPoU+2Fzh3r0JbvzsW+QW
      JijE4qxNjDHY2cJuKYCxOY46eI6DTIbC3ibdF27U2oWnGOlp4cpgO7FwgM9e6WWgs4mgv4JM
      oVgd3HwVNjZgdweuXIVQ2FVfBaFaai7gpo5eBs5sAbBTsLg20o6R3GY3naNvqJ9soEAmW2B2
      fJSOwVdpDPswTfOwnEgl02PbtimVShX5Uxd2fqKuO6Nue0MI0zD4qIm0bduHVREAiERRQyGU
      YBAzEnX+rcJ2PwrTNCv2+7TYNk3zsKyO12y7td3oVl+Xz/9qyia7ehMrjEmqaFAsFGiIhknn
      CuQzGcLNzQxduEZie4OC2U3o/RIilVY7CAQCBAK1v6lj2zaGYTxdLqW7Bzq70GrQXqlUcs1v
      wBXbuq6jaZorCSRu23ajcoubfW29Xxuuml2Wmvfc5vIcawcZZh5N0DdylrmH94i1dtM3NMTu
      4jRFfwttjRGamlq4fuUcOzuJqtsoj6YvBL8fQqEX154gVEHNq1J+Eiodgff392lubn7mZ563
      /Q+NwDXEzRFY13UZgT9g260R2K2+PhUj8IvgtCUzCMJJ4UkBC4Lg4EkBn6JZvyCcKJ6ci1Ya
      yFE1lg2WjX3kNr6iKFImVji1eFLArjwyw7YxFzYhlcP0+cCyQFPRLvaiaCJg4XTiySm0KwJW
      FNSmGErAj3auCyUWRmmIoJzmtEPhpceTZ6dbD/hWGqNYlomdzmNn8qgd7jxATRBqhScF7Noa
      WFWx2xsw5zZQmutQ/J5cYQgvEZ48Q916bCTgTKMTedR4o9y8Ek49nhSwq4XdVRXt3BnRruAJ
      PCng56EwPoGVzR6+V+tihC5e/MjPKqqoV/AGnhSwaZpk8iV006IpVlmiQfJP/4zA0CBKMISV
      zWBsbHysgAXBK3hOwCXdZDeZY3MlzdZ+hp++MUAo4CMSenYCgqJp1H/5y2iNDehbWyT+1x+8
      II8FwT1emIBts8T05CS++jgDHU2kCiViPoODYpB4c7RiOweZAr//nSlU1Ue+qPPoyTa/9oUr
      nO1ucdF7QTidvDABby7NE4kPUNycZTfsJ53LsLC9zaUbrx1+xrKsw+celSs1qKr6VKWO+rCP
      V4bj/Mnfz2AYJl/53Hk6miKUSqWP/Y6iKJjFAgd/9EeogSBWNoOZzx9+R1VVFEXBsiwMwzi0
      oyjKoT+aph3a+2A7Rz8PH06LLPtiGMZhO2U+rp2j8d5H2zl6A+9oO4ZhHH7v6O8pvz/sB9P8
      yD4qt/PB7+i6jqqqh39HK6d8XDvPOn7l32tZFrqu4/f7D/vpg8fiuD561rE4WuXlo45FNe2U
      /8rt6Lp+6KtlWR86Zkd/YzX9Uj5HDMN45neOnm8vTMA53aS9Pkq2UE8xX2J2fJSuoduEfD/u
      7HI+5NEfXv6B5U7dTxdZ3cnwxdvDHKTzFHSDpc0kQ10NmKb5VMcc/eGN/+I3UIolbJwHkNmh
      0KFYNU077PCjJ/jRdssctVtup9zuR3Vw2W757+hvPdpOWdzlNo6eaEfbKfv6wXbKfWbb9mG6
      5dF/K9sunxxH2zjaTtnPcjvlsjc+n+9Dx6JM+X25naN98lHHouxbuT/KQjja7tHSMuVtw0qO
      Rfl92XbZxlHBHs25fZ5jUe5XTdMO7X/ccT/a/x88rz/4G8u+VdOXLyyhf2fpMQmtheL2HPHe
      sySzWbJbq/RdvU1jqPKSOrZts7u3x1rCYD+V56de6T/2O5UiCf0fRhL6n+a0JfS/sBG4re8c
      2ZlJwt3naW6IEAqHiXZ3sH+QglDlIYuKohAMBLg+3Oqit4LgDV7gXWiF/nOXDt/V+Z0rWGtr
      9VcyeZyIIDh4Mhb6tD3gWxBOCk8K2K1sJEHwGp4UsKux0ILgITypBBGwIDh4UglyE0sQHDwp
      YLeeLyQIXsOTApYRWBAcTtWjVQzDIJfLVfQ5t57O8MF445fd9gfjvGtJpY/SeV7bbl3o3err
      5+mPUyXgSnFTwF60XX7cajAYrLltN8MdPxh3Xmvb5fjnWuPWcTwaY10pMoUW2yeGF32G03Uc
      PTkCC4Lg4MkRWBAEB48I2GZ9YYbHC6tYtsHc9ByGbWOZOpNTj5/Pom2TT+2xsZPAtm32NpZ4
      ND2Padkszj+moFvYtsnMxDTVblrZtsX60ixjD6comRYHWys8mJjFsm3m52YoGRa2bTA7NU2x
      yrBu2zKYmXzAg4kZdNNif3OZh5NzmLbNwuPHFCwbbJvZx5MUjepDTnPJbZbW97BNnenxB6zv
      JtGLaeaerAFQTO8xu7RRtd1SZo9379zhwdT8+/36gNXtBEYhy9zCMjZg5A6Yfr+darAtg7mp
      R8wtb2JbBo/Hx1jbSWIW0swsrmIDxew+swvr1RnWc9y7O8qdO++yuLFHLrnD/bFxCobF1soc
      +1kD2ywwNTlHtdH5tmUyO/mA6SerWLbNxtIsU/MrWKbO9Mwctg22XWRqcgbrGXNkTwjYSK2x
      lgsRKuyymUiytvCErf0c2d1lHs1XeVDexzJKLCwssr61CXae2aUE3TGdmbUDttcWWN3ap5jZ
      5/GjGQrV2taLKJEWBtpDzM4tMbuyx1C7yvjcNrursyxtpygkdpidnSdf7ZG3DOJ9I5yJmswt
      LjG7nqK3WWVmYYPU3jJzi3sY2S2mZpfIFqsTsG2bTM3MsrW6zsqTKWIdg2w/mSaZz/B4fIaS
      bfNkcY3t7dUqnYa9tVX6L7/KtQtDrM9OEowPsrfymEQixZP5GXKGzdL8EzZ2dqu2vTI7Sah9
      gO72RjZnJwh2nmVjYZpcaoe5J8vkdYv1pXlW1neqM+yPcOPmq5ztbsW0TSamFpniZo0AAAXT
      SURBVBkZ6mR8ao69VIKl+XkONlZZWFqj2kcNpJYfUmwYQktusra+xHrWR72dZHVzj83Fx6yn
      SiRXFphd38b0uoAz+wnau7tob2sgnSvRHO9gf3uLla0svZ2x57Kp+YOcPXcWnwIUE4Sbz9DU
      2UEpkSHa0kF2f4ud9U3i3Z3V2w6EqfcbTC/v0RWvo76hmVhbH+R2iLb1kN9ZZXtnj3i8+pxm
      xRcitfGE96ZXaY4EaWxpoq6pA7OUwlffjZVeY3V9n+6uamuE2azOTNJz/iqaAsWSRXNjHW1N
      QbJF6D/TwPJaAh2VwHOcNaHGZpbG3+O7P7xDQofOxiiNjQ2UigadHa1srm+Rtf3EnuPm7tbW
      DuuLU7z9zn02CwrdLVFaYjGKpkVHayObu3ukTT/1/uc53S2WN5L0tUXw1zUTidXjtwxQQvgp
      sn6QI95UeU23MrF4D2sTd1g8yOIrGrTHW2lubaeQz9B0pp+DtSVWkyV6Gp+9s+AJAUcb69lZ
      32J3L00s7EcN1KHkdtAD0dokNAcbKCQ2SG5t42+IAj7q/SVWchqNgervOJqFFFMLO9x89Sb1
      kQjp9AHZvVUItwIa0YDJZgYaQtV3v1HM09w9zBtXB1jfT5E8SJJJ7qD66wCI+DW2swZ14Sqr
      itg2RdNiceohc/MLmIpNIplhL1EkGoBwUxeJpVFCjT1V+wyg+CNcv3GTgKJT74PtVI5UMoU/
      6CPa1Mbu6gyR+ucr0tDUUM+ZwUvEo37qAjYbBzkOslmCqkpdWwdbM4+oa4k/l+3U1jKhtl58
      viB6JkE+m0ZXnG2ejoYgpuV/rgva5twi5269zsXOGEkLdnf2SezvEgxF0fxhzGIStBDHlSj3
      RFlZf2MP8d1pMjQw0tRAyPITVMLkfPXYhecbgfVCmkePpiiYFpsHXQx0RVk8MLl0oZnkgU0s
      pBLIqETsItXurpqmiV1Kc290lIGRiwx0NDCzXuDKpT4SB35iAYgUfIQpEK7yKTGqCouTE5SU
      IBcujJDeXmZxu8Cli2dJ7oepDysEM1Dn1wlVc2YpKsMXrwEGfX0J2lrqmJ6coqn3LA3RIH5N
      I6gO09rdQCLQW53TQMAH4w/G6B++QHdbHdMT49R3DtHYGCZgQsTqoT4er/7CAwxcvMLjqSmi
      Z/roizcyPTFOa88wkXqNNitCbGiQxtZWImr1tg0tzMCZFlAUzp89w9TsKhcvXaKQOaCpMYbW
      qmGm96sWUueFK0xPTpINNnF+sJ/NxVn2jQgX+lrZT+UINAcpBVshn3imiGUbSRA8jCem0IIg
      fDQiYEHwMCJgQfAwImBB8DAiYEHwMCLglwQzu8e3/+R3+Xf/+b8zPnc0ksrk777/gw99/pt/
      +odsJYvYls63v/5V/u+3vsXc6sdHSf391/+Yb/7oHn/+53+BVdXGRon/8Xu/X8XnhaN4Yh9Y
      +ORo0RZ+7h/dYkFLc3mghT/733+IrSj0XbzCX/3lX+KPNdMeyDIzO4cav45h6NjY5PaW2bKa
      +PW3voBtFfnaH/8+lqpy9vYb/PDr36avN0L4zA1G3x3j8lcuoFsl1h99j2+MrnO+t4MHjxfp
      DJWIdJ9lbX2ft272cn9pD4swF+IK46tJ1vcyJ909nkVG4JcQfX+ZVLCXL3z+BrNLO/QPneWz
      Ny6wtLCMGvGzMrdw+FlFUQ/rcJv5DRJ2nK/8zE3euz+BL9LI7ZvnSSZ1+vuHeOMz1ygWClhG
      idaB6/z0rfNEmjq5eXmY+OAVGgIm7/zwR+DzE4sEeTg5y5tvfZH2+soe0i58GBHwy4QWoC4a
      wt/cR7O5xl//YIzr164x1B7m+3cnyOVzhEJR6mMRorE6NFUh3NxDfyzPN//ft1jcD9Lq3+Mb
      f3uP11+9Sn1dDM0XJBoOEq2rR0UhGovhC4Rpa25EUX3URSP4g2GCfo1YLMrrn71NKpElVlfH
      hbP9/O13vouu1v5BYS8LEoklCB5GRmBB8DAiYEHwMP8fPeHygyBl/FEAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Confirmed case' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Dashboard 1' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Death Case' width='240'>
      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
      sIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCI
      wRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEU
      sIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCI
      wRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEU
      sIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCI
      wRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEU
      sIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCIwRSwiMEUsIjBFLCI
      wRSwiMEUsIjBfLUeQOQbszzQEIFysNaT1IwCFmNVS1Um3prAzhVqPUrNKGAxllMqs/Lmh1TX
      1ms9Ss3oPbCIwRSwGMuq9QAPAct1Xfd3n5xZWufs6J1azCOybd1+B/72n7/Th9D3fA+84XpZ
      9YQf9Cwi96XVU6LuC8tN3z+OPxGjvLjM+rlLNZvrQdJJLNk1/IkY6V+8SfxHTxFIJWk8Pkxx
      6jaWx4M/EaU4fgunVMbfHKc4fhO3atd65D+Y3gPLruEN15N88VlwIfL4UbzhEE2PHqHh0H6y
      l67ii0XwRRup62oHr7fW434rtAeWXcPOF0n/4k0AYs88RjG9ip0vUN/VgZ3N45QqBDtaqeve
      A5yv7bDfkm0FfPX8OxRz63QPHiHZ3vmV62aWF8F1wbJoSrR8K0OKbMfaex9tPV498xHhA704
      +QLrF64AUJycxlMXYPnVd3DLlVqN+a3aVsCu43D06Rc49/pLBOpDZFeWCNaHmRm7QnvvfnyB
      IJNXLhBraae5o4tCbp1iPquA5YGqrmY+X7Bt8ldv3L2C45C/MvZgh9ph2wp4fnqCzPISjdE4
      c5NjOK5NZ3MrtmNz4e2Xef6v/oFC1zoer4f5WxP4AwGwdJVOZKdtK+DWzj4OnnyaX//fzwk3
      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
      az1Kzfw/3coMaT6L4XoAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Dual Axis Chart' width='240'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Global case' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Highest Death rate/min' width='240'>
      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
      gg==
    </thumbnail>
    <thumbnail height='240' name='Recovery case' width='240'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='240' name='Sheet 8' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAC0UlEQVR4nO3TQQ0AIBDAMMC/58MDH7KkVbDP9szMApLO7wDgnYEhzMAQZmAIMzCEGRjC
      DAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMAND
      mIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZg
      CDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIM
      DGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OY
      gSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAI
      MzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwM
      YQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iB
      IczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgz
      MIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxh
      BoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEh
      zMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMw
      hBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEG
      hjADQ5iBIczAEGZgCDMwhBkYwgwMYRfMRAXcQni19AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Sheet 9' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAC0UlEQVR4nO3TQQ0AIBDAMMC/58MDH7KkVbDP9szMApLO7wDgnYEhzMAQZmAIMzCEGRjC
      DAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMAND
      mIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZg
      CDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIM
      DGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OY
      gSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAI
      MzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwM
      YQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iB
      IczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgz
      MIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxh
      BoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEh
      zMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMw
      hBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEG
      hjADQ5iBIczAEGZgCDMwhBkYwgwMYRfMRAXcQni19AAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
